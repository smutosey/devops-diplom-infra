name: Netology Infra Deploy
run-name: Infra Apply by ${{ github.actor }} ðŸš€
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
defaults:
  run:
    working-directory: ./production
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_cloud_id: ${{ secrets.CLOUD_ID }}
  TF_VAR_folder_id: ${{ secrets.FOLDER_ID }}
  TF_VAR_ssh_public_key_b64: ${{ secrets.SSH_PUBLIC_KEY_BASE64 }}
  TF_VAR_ssh_private_key_b64: ${{ secrets.SSH_PRIVATE_KEY_BASE64 }}
  TF_VAR_sa_key_b64: ${{ secrets.TERRAFORM_SA_KEY_BASE64 }}
  PRODUCTION_DIR: /kubespray/inventory/production
jobs:
  infra:
    runs-on: ubuntu-latest
    outputs:
      lb_addr: ${{ steps.tf-get.outputs.lb_addr }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Terraform Install
        id: tf-install
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Plan
        id: tf-plan
        run: |
          terraform init && terraform plan -out=plan.out

      - name: Terraform Apply
        id: tf-apply
        run: |
          terraform apply --auto-approve plan.out

      - name: Terraform get lb address
        id: tf-get
        run: |
          echo "lb_addr=$(terraform show -json | jq '.values.root_module.resources[] | select(.address=="yandex_vpc_address.lb_addr") | .values.external_ipv4_address[0] | .address')" >> "$GITHUB_OUTPUT"

      - name: Upload inventory
        uses: actions/upload-artifact@v4
        with:
          name: inventory
          path: ${{ github.workspace }}/production/ansible/inventory.yml

      - name: test ssh
        run: |
          install -m 700 -d ~/.ssh
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          install -m 600 -D /dev/null ~/.ssh/id_ed25519.pub
          echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PUBLIC_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_ed25519.pub
          ssh-keyscan -H -t ed25519 84.201.178.51  -vvv >> ~/.ssh/known_hosts
          ls -lha ~/.ssh
          cat /etc/selinux/config
          ssh nedorezov@84.201.178.51:23 -vvv

  k8s-cluster:
    runs-on: ubuntu-latest
    needs: infra
    container:
      image: quay.io/kubespray/kubespray:v2.25.0
      env:
        ANSIBLE_HOST_KEY_CHECKING: 0
        ANSIBLE_FORCE_COLOR: 1
        LB_ADDRESS: ${{ needs.infra.outputs.lb_addr }}
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null /root/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 --decode > /root/.ssh/id_ed25519
          echo "${{ secrets.SSH_PUBLIC_KEY_BASE64 }}" | base64 --decode > /root/.ssh/id_ed25519.pub
          ssh-keyscan -H -t ed25519 84.201.178.51  -v >> /root/.ssh/known_hosts
          ls -lha /root/.ssh/
          cat /root/.ssh/id_ed25519 | tail -n 2

      - name: Download inventory
        uses: actions/download-artifact@v4
        with:
          name: inventory
          path: ${{ env.PRODUCTION_DIR }}/

      - name: Start Kubespray Install
        run: |
          cat /etc/ssh/ssh_config
          ssh nedorezov@84.201.178.51 -vvv
          ls -lha ./ansible/
          cp -r ./ansible/* ${{ env.PRODUCTION_DIR }}
          ls -lha ${{ env.PRODUCTION_DIR }}
          cd /kubespray && ANSIBLE_HOST_KEY_CHECKING=0 ansible-playbook cluster.yml -i ${{ env.PRODUCTION_DIR }}/inventory.yml --become --become-user=root -e '{"supplementary_addresses_in_ssl_keys":[$LB_ADDRESS]}' -vvv
          sed -i -e 's# https://.*# https://$LB_ADDRESS:6443#' ${{ env.PRODUCTION_DIR }}/artifacts/admin.conf


